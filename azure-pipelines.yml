# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: default
stages:
- stage: SAST 
  jobs:
  - job: SAST
    displayName: 'Analisis Estatico'
    steps:
    - task: Maven@4
      displayName: 'Maven No sonar'
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        sqMavenPluginVersionChoice: 'latest'

    - task: SonarCloudPrepare@1
      displayName: 'Parametros SonarCloud'
      inputs:
        SonarCloud: 'sonarumanzor'
        organization: 'umanzordiplomado'
        scannerMode: 'Other'
        extraProperties: |
            sonar.projectKey=umanzordiplomado
            sonar.projectName=umanzordiplomado

    - task: Maven@4
      displayName: 'Maven Sonar'
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        goals: clean package -DskipTests
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'

    - task: sonarcloud-buildbreaker@2
      displayName: 'Sonar Cloud BuildBreaker'
      inputs:
        SonarCloud: 'sonarumanzor'
        organization: 'umanzordiplomado'

    - task: SonarCloudPublish@1
      displayName: 'Publicacion SonarCloud'
      inputs:
        pollingTimeoutSec: '60'

############################################################
- stage: SCA 
  jobs:
  - job: SCA
    displayName: 'Analisis SCA'
    steps:

    - task: Maven@4
      displayName: 'Verificacion Maven'
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - script: find $(Build.SourcesDirectory) -name "*.jar"
    - task: dependency-check-build-task@6
      displayName: 'Analisis de dependencias'
      inputs:
        projectName: 'scan-librerias'
        scanPath: '$(Build.SourcesDirectory)/target'
        format: 'ALL'
        reportsDirectory: '$(Build.SourcesDirectory)/dependency'
      
################################################################
- stage: ContainerSecurity 
  jobs:
  - job: ContainerSecurity
    displayName: 'Analisis de Container'
    steps:
   
    - task: Maven@4
      displayName: 'Verificacion Codigo Maven'
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false


    - task: DockerInstaller@0
      displayName: 'Install Docker'
      inputs:
        dockerVersion: '17.09.0-ce'

    - task: Docker@2
      displayName: 'Login Docker'
      inputs:
        containerRegistry: 'Docker'
        command: 'login'

    - task: Docker@2
      displayName: 'Subida de imagen docker y validacion via trivy'
      inputs:
        containerRegistry: 'docker'
        repository: 'umanzordiplomado/umanzor'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'

    - script: |
        sudo apt-get install -y rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
        trivy image --severity HIGH,CRITICAL --no-progress --format template --template "@contrib/junit.tpl" -o /app/junit-report.xml umanzordiplomado/umanzor:latest
        cp junit-report.xml $(Build.ArtifactStagingDirectory)/junit-report.xml
      displayName: Image Scan


    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/junit-*.xml'
        mergeTestResults: true
        failTaskOnFailedTests: true
        testRunTitle: 'Trivy'
      condition: 'always()'